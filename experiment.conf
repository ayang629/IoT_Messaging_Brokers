YOU MAY ADD COMMENTS HOWEVER YOU'D LIKE.
Only lines beginning with '-' will be read

=============================================================================
IMPORTANT: PLEASE DO NOT CHANGE ORDERING OF ARGUMENTS; ONLY CHANGE THE OPTION
=============================================================================
		
#number of topics that will be created	
1.)	
-num_topics 20

#How many clients will publish messages to a given topic
2.)
-pub_clients_per_topic 2

#Total number of messages the publishers will publish to a given topic (please evenly divide this with above)
#e.g: 2 publisher_per_topic and 100 total_msgs_per_topic will launch 2 mqtt publisher clients, each delivering 50 msgs
3.)
-total_msgs_per_topic 100

#How many clients will subscribe to a given topic
4.)
-sub_clients_per_topic 5

#How many topics a publisher process (i.e: client) should launch
#e.g: 10 pub_topics_per_process and 20 topics will result in 2 node processes launching the necessary number of clients.
5.)
-pub_topics_per_process 10

#How many topics a subscriber process (i.e: client) should launch
6.)
-sub_topics_per_process 10

#client type: mqttjs currently the only thoroughly tested implementation what works well with the experiments
7.)
-client_type mqttjs

#Messages will be published with a given QoS. Three options: [0 | 1 | 2]
8.)
-QoS 1

#How many times the experiment should be run
9.)
-run_times 1

#host for publishers to publish to
10.)
-ip_pub 127.0.0.1

#port for publishers
11.)
-pport 1883

#host for subscribers to subscriber to
12.)
-ip_sub 127.0.0.1

#port for subscribers
13.)
-sport 1883

#Three options:[PUB | SUB | NO] == [only launch pub config | only launch sub config | launch both (i.e: run entire experiment)]
14.)
-isolated NO

#The amount of time you want to give your subscribers to connect to your broker before you start launching publishers
15.)
-sleep 5

